{"version":3,"file":"weather-current-wind.component.js","sourceRoot":"","sources":["../../../src/components/weather-current-wind/weather-current-wind.component.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,SAAS,EACT,uBAAuB,EACvB,KAAK,EAGN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,gBAAgB,EAAE,MAAM,8DAA8D,CAAC;AA0BhG;IAAA;IAuCA,CAAC;IArCC,sBAAI,8CAAK;aAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAGD,UAAU,KAAK;YACb,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,CAAC;;;OANA;IAQD,sBAAI,4CAAG;aAAP;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;aAGD,UAAQ,KAAa;YACnB,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO;aACR;YACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,qBAAmB,IAAI,CAAC,IAAI,SAAM,CAAC;QACrD,CAAC;;;OATA;IAcD,oDAAc,GAAd,UAAe,KAAuB;QACpC,QAAQ,KAAK,EAAE;YACb,KAAK,gBAAgB,CAAC,OAAO,CAAC;YAC9B,KAAK,gBAAgB,CAAC,MAAM;gBAC1B,OAAO,KAAK,CAAC;YACf,KAAK,gBAAgB,CAAC,UAAU;gBAC9B,OAAO,OAAO,CAAC;YACjB;gBACE,OAAO,EAAE,CAAC;SACb;IACH,CAAC;IA/BD;QADC,KAAK,EAAE;;;4DAIP;IAOD;QADC,KAAK,EAAE;;;0DAOP;IAEQ;QAAR,KAAK,EAAE;;8DAAe;IAzBZ,2BAA2B;QAvBvC,SAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,MAAM,EAAE;gBACN,iQAYC;aACF;YACD,QAAQ,EAAE,sFAGT;SACF,CAAC;OACW,2BAA2B,CAuCvC;IAAD,kCAAC;CAAA,AAvCD,IAuCC;SAvCY,2BAA2B","sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { TemperatureScale } from '../weather-current-temperature/current-temperature.component';\nimport { WeatherSettings } from '../../weather.interfaces';\n\n@Component({\n  selector: 'weather-current-wind',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        font-size: 0.8em;\n        min-height: 1.3em;\n      }\n      i {\n        margin-left: 0.3em;\n        font-size: 1.6em;\n      }\n    `\n  ],\n  template: `\n    <span>Wind {{ speed }} {{ unit }}</span>\n    <i [class]=\"windIcon\"></i>\n  `\n})\nexport class WeatherCurrentWindComponent {\n  unit: string;\n  get scale() {\n    return this._scale;\n  }\n\n  @Input()\n  set scale(value) {\n    this._scale = value;\n    this.unit = this.mapScaleToText(this._scale);\n  }\n  windIcon: string;\n  get deg(): number {\n    return this._deg;\n  }\n\n  @Input()\n  set deg(value: number) {\n    if (!value) {\n      return;\n    }\n    this._deg = value;\n    this.windIcon = `wi wi-wind from-${this._deg}-deg`;\n  }\n  private _deg: number;\n  @Input() speed: number;\n  private _scale: TemperatureScale;\n\n  mapScaleToText(scale: TemperatureScale): string {\n    switch (scale) {\n      case TemperatureScale.CELCIUS:\n      case TemperatureScale.KELVIN:\n        return 'm/s';\n      case TemperatureScale.FAHRENHEIT:\n        return 'mil/h';\n      default:\n        return '';\n    }\n  }\n}\n"]}