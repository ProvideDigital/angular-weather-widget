{"version":3,"file":"angular-weather-widget.module.js","sourceRoot":"","sources":["../src/angular-weather-widget.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  HttpClient as Http,\n  HttpClientModule as HttpModule\n} from '@angular/common/http';\nimport {\n  WeatherApiConfig,\n  WeatherApiName,\n  WeatherApiService\n} from './services/api/weather.api.service';\nimport { PoolingService } from './services/poling.service';\nimport { WeatherContainer } from './weather.container';\nimport { CommonModule } from '@angular/common';\nimport { WeatherIconComponent } from './components/weather-icon/weather-icon.component';\nimport { WeatherCurrentDescriptionComponent } from './components/weather-current-description/weather-current-description.component';\nimport { WeatherCurrentTempComponent } from './components/weather-current-temperature/current-temperature.component';\nimport { WeatherActionsComponent } from './components/weather-actions/actions.component';\nimport { WeatherLocationComponent } from './components/weather-location/weather-location.component';\nimport { WeatherCurrentWindComponent } from './components/weather-current-wind/weather-current-wind.component';\nimport { OpenWeatherMapApiService } from './services/api/open-weather-map/open-weather-map.api.service';\nimport { WeatherCurrentDetailsComponent } from './components/weather-current-details/weather-current-details.component';\nimport { WeatherForecastComponent } from './components/weather-forecast/weather-forecast.component';\n\nimport { WeatherForecastSimpleGridComponent } from './components/weather-forecast/forecast-simple-grid/forecast-simple-grid.component';\nimport { WeatherForecastGridDayComponent } from './components/weather-forecast/forecast-simple-grid/weather-forecast-grid-day.component';\nimport { WeatherForecastDetailedComponent } from './components/weather-forecast/forecast-detailed/forecast-detailed.component';\nimport { WeatherForecastDetailDayComponent } from './components/weather-forecast/forecast-detailed/forecast-detailed-day.component';\nimport { ChartComponent } from './components/chart/chart.component';\nimport { WeatherForecastChartWideComponent } from './components/weather-forecast/forecast-simple-grid/forecast-chart-wide.component';\nimport { WeatherHelpersService } from './services/weather-helpers.service';\n\nexport function apiServiceFactory(\n  http: Http,\n  pooling: PoolingService,\n  openWeather: WeatherApiConfig\n) {\n  switch (openWeather.name) {\n    case WeatherApiName.OPEN_WEATHER_MAP:\n      return new OpenWeatherMapApiService(http, pooling, openWeather);\n    default:\n      return new OpenWeatherMapApiService(http, pooling, openWeather);\n  }\n}\n\nexport function forRoot(config: WeatherApiConfig): ModuleWithProviders {\n  return {\n    ngModule: AngularWeatherWidgetModule,\n    providers: [\n      PoolingService,\n      WeatherHelpersService,\n      {\n        provide: WeatherApiService,\n        useFactory: apiServiceFactory,\n        deps: [Http, PoolingService, 'WEATHER_CONFIG']\n      },\n      { provide: 'WEATHER_CONFIG', useValue: config }\n    ]\n  };\n}\n\n@NgModule({\n  imports: [CommonModule, HttpModule],\n  declarations: [\n    ChartComponent,\n    WeatherContainer,\n    WeatherCurrentTempComponent,\n    WeatherActionsComponent,\n    WeatherIconComponent,\n    WeatherCurrentDescriptionComponent,\n    WeatherLocationComponent,\n    WeatherCurrentWindComponent,\n    WeatherCurrentDetailsComponent,\n    WeatherForecastComponent,\n    WeatherForecastGridDayComponent,\n    WeatherForecastSimpleGridComponent,\n    WeatherForecastDetailedComponent,\n    WeatherForecastDetailDayComponent,\n    WeatherForecastChartWideComponent\n  ],\n  exports: [WeatherContainer]\n})\nexport class AngularWeatherWidgetModule {\n  constructor() {}\n  static forRoot = forRoot;\n}\nexport * from './weather.interfaces';\nexport { WeatherApiName } from './services/api/weather.api.service';\n"]}